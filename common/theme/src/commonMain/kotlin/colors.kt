import androidx.compose.ui.graphics.Color
import component_colors.DatePickerColors

data class AppColors(
    val mainBackgroundColor: Color,
    val mainBackgroundWindowDarkColor: Color,
    val mainDrawerBackground: Color,
    val mainToolbarColor: Color,
    val mainLeftBarColor: Color,
    val mainTextColor: Color,
    val mainTextColorLight: Color,
    val mainPlaceholderTextColor: Color,
    val mainIconsColor: Color,
    val mainIconsColorDark: Color,
    val selectedIconColor: Color,
    val cardBackgroundDark: Color,
    val cardBackgroundLight: Color,
    val tooltipAreaBackground: Color,
    val divider: Color,
    val searchBackground: Color,
    val searchBackgroundDark: Color,
    val searchIconColor: Color,
    val searchDescriptionTextColor: Color,
    val searchDividerColor: Color,
    val pointerIsActiveCardColor: Color,
    val pointerIsActiveCardColorDark: Color,
    val linkColor: Color,
    val datePickerColors: DatePickerColors,
    val errorColor: Color,
    val successColor: Color,
    val readingStatusesColor: ReadingStatusesColor,
    val textFieldColor: Color,
    val textFieldColorDark: Color,
    val hintColor: Color,
    val focusedTextFillBackground: Color,
    val dropdownBackground: Color,
    val tooltipSelectedBackground: Color,
    val mainAddButtonColor: Color,
    val textDescriptionColor: Color,
    val primaryButtonColor: Color,
    val secondaryButtonColor: Color,
)

val lightPaletteTheme = AppColors(
    mainBackgroundColor = Color(0xFF151515),
    mainBackgroundWindowDarkColor = Color(0xFF2A2A2A),
    mainDrawerBackground = Color(0xFF252525),
    mainToolbarColor = Color(0xFF252525),
    mainLeftBarColor = Color(0xFF252525),
    mainTextColor = Color(0xFFe5e5e5),
    mainTextColorLight = Color.White,
    mainPlaceholderTextColor = Color(0xFFb2b2b2),
    mainIconsColor = Color(0xFFd4d4d4),
    mainIconsColorDark = Color(0xFF2a2a2a),
    selectedIconColor = Color(0xFF6495ED),
    cardBackgroundDark = Color(0xFF2A2A2A),
    cardBackgroundLight = Color(0xFF3A3A3D),
    tooltipAreaBackground = Color(0xFF1b1c21),
    divider = Color(0xFF212121),
    searchBackground = Color(0xFF262626),
    searchBackgroundDark = Color(0xFF222222),
    searchIconColor = Color(0xFF878787),
    searchDescriptionTextColor = Color(0xFFc3c3c3),
    searchDividerColor = Color(0xFF3b3b3b),
    pointerIsActiveCardColor = Color(0xFF4D4D50),
    pointerIsActiveCardColorDark = Color(0xFF3d3d40),
    linkColor = Color(0xFF4282D3),
    datePickerColors = DatePickerColors(
        containerColor = Color(0xFF212121),
        textColor = Color(0xFFe5e5e5),
        selectedTextColor = Color(0xFF0093ff),
        selectedContainerColor = Color(0xFF545454),
    ),
    errorColor = Color(0xFFFA8072),
    successColor = Color(0xFF4BB543),
    readingStatusesColor = ReadingStatusesColor(
        plannedStatusColor = Color(0xFFffbe0b),
        readingStatusColor = Color(0xFF3a86ff),
        doneStatusColor = Color(0xFFccff33),
        deferredStatusColor = Color(0xFFd5b9b2),
    ),
    textFieldColor = Color(0xFF3f3f3f),
    textFieldColorDark = Color(0xFF101010),
    hintColor = Color(0xFF949494),
    focusedTextFillBackground = Color(0xFF212121),
    dropdownBackground = Color(0xFF252525),
    tooltipSelectedBackground = Color(0xFF4D4D50),
    mainAddButtonColor = Color(0xFF1CD3A2),
    textDescriptionColor = Color(0xFF949494),
    primaryButtonColor = Color(0xFF6495ED),
    secondaryButtonColor = Color(0xFF434343),
)

val darkPaletteTheme = AppColors(
    mainBackgroundColor = Color(0xFF151515),
    mainBackgroundWindowDarkColor = Color(0xFF2A2A2A),
    mainDrawerBackground = Color(0xFF252525),
    mainToolbarColor = Color(0xFF252525),
    mainLeftBarColor = Color(0xFF252525),
    mainTextColor = Color(0xFFe5e5e5),
    mainTextColorLight = Color.White,
    mainPlaceholderTextColor = Color(0xFFb2b2b2),
    mainIconsColor = Color(0xFFd4d4d4),
    mainIconsColorDark = Color(0xFF4D4D50),
    cardBackgroundDark = Color(0xFF2A2A2A),
    cardBackgroundLight = Color(0xFF3A3A3D),
    tooltipAreaBackground = Color(0xFF1b1c21),
    divider = Color(0xFF252525),
    searchBackground = Color(0xFF262626),
    searchBackgroundDark = Color(0xFF222222),
    searchIconColor = Color(0xFF878787),
    selectedIconColor = Color(0xFF6495ED),
    searchDescriptionTextColor = Color(0xFF9f9f9f),
    searchDividerColor = Color(0xFF9f9f9f),
    pointerIsActiveCardColor = Color(0xFF4D4D50),
    pointerIsActiveCardColorDark = Color(0xFF3d3d40),
    linkColor = Color(0xFF4282D3),
    datePickerColors = DatePickerColors(
        containerColor = Color(0xFF212121),
        textColor = Color(0xFFe5e5e5),
        selectedTextColor = Color(0xFF0093ff),
        selectedContainerColor = Color(0xFF545454),
    ),
    errorColor = Color(0xFFFA8072),
    successColor = Color(0xFF4BB543),
    readingStatusesColor = ReadingStatusesColor(
        plannedStatusColor = Color(0xFFffbe0b),
        readingStatusColor = Color(0xFF3a86ff),
        doneStatusColor = Color(0xFFccff33),
        deferredStatusColor = Color(0xFFd5b9b2),
    ),
    textFieldColor = Color(0xFF3f3f3f),
    textFieldColorDark = Color(0xFF101010),
    hintColor = Color(0xFF949494),
    focusedTextFillBackground = Color(0xFF212121),
    dropdownBackground = Color(0xFF252525),
    tooltipSelectedBackground = Color(0xFF4D4D50),
    mainAddButtonColor = Color(0xFF1CD3A2),
    textDescriptionColor = Color(0xFF949494),
    primaryButtonColor = Color(0xFF6495ED),
    secondaryButtonColor = Color(0xFF434343),
)

class ReadingStatusesColor(
    val plannedStatusColor: Color,
    val readingStatusColor: Color,
    val doneStatusColor: Color,
    val deferredStatusColor: Color,
)